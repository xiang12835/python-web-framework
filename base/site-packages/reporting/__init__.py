import imp
from base import Report



_registry = {}

def register(slug, klass,perm=None):
    _registry[slug] = (klass,perm)

def get_report(slug,user=None):
    try:
        report,p = _registry[slug]
        if user and p:
            if user.has_perm(p):return report
            else:raise Exception("No such report '%s'" % slug)
        else:return report
    except KeyError:
        raise Exception("No such report '%s'" % slug)

def all_reports(user=None):
    retl = []
    for k,v in _registry.items():
        if user and v[1]:
            if user.has_perm(v[1]):
                retl.append((k,v[0]))
        else:
            retl.append((k,v[0]))
    return retl
#    return _registry.items()


def autodiscover():
    from django.conf import settings
    REPORTING_SOURCE_FILE =  getattr(settings, 'REPORTING_SOURCE_FILE', 'reports') 
    for app in settings.INSTALLED_APPS:
        try:
            app_path = __import__(app, {}, {}, [app.split('.')[-1]]).__path__
        except AttributeError:
            continue

        try:
            imp.find_module(REPORTING_SOURCE_FILE, app_path)
        except ImportError:
            continue
        __import__('%s.%s' % (app, REPORTING_SOURCE_FILE))


def DistinctCount(field):
    from django.db.models import Count
    return Count(field, distinct=True)
