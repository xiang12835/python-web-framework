{"code":"// tslint:disable: variable-name\r\nvar SimplePromiseQueue = /** @class */ (function () {\r\n    function SimplePromiseQueue() {\r\n        this._queue = [];\r\n        this._flushing = false;\r\n    }\r\n    SimplePromiseQueue.prototype.enqueue = function (promise) {\r\n        this._queue.push(promise);\r\n        if (!this._flushing) {\r\n            return this.flushQueue();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    SimplePromiseQueue.prototype.flushQueue = function () {\r\n        var _this = this;\r\n        this._flushing = true;\r\n        var chain = function () {\r\n            var nextTask = _this._queue.shift();\r\n            if (nextTask) {\r\n                return nextTask.then(chain);\r\n            }\r\n            else {\r\n                _this._flushing = false;\r\n            }\r\n        };\r\n        return Promise.resolve(chain());\r\n    };\r\n    return SimplePromiseQueue;\r\n}());\r\nexport default SimplePromiseQueue;\r\n//# sourceMappingURL=SimplePromiseQueue.js.map","map":{"version":3,"file":"SimplePromiseQueue.js","sourceRoot":"","sources":["src/SimplePromiseQueue.ts"],"names":[],"mappings":"AAAA,gCAAgC;AAChC;IAAA;QACmB,WAAM,GAAyB,EAAE,CAAA;QAC1C,cAAS,GAAG,KAAK,CAAA;IAqB3B,CAAC;IAnBQ,oCAAO,GAAd,UAAe,OAAsB;QACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QACzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YAAE,OAAO,IAAI,CAAC,UAAU,EAAE,CAAA;SAAE;QACjD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAA;IAC1B,CAAC;IAEO,uCAAU,GAAlB;QAAA,iBAYC;QAXC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;QAErB,IAAM,KAAK,GAAG;YACZ,IAAM,QAAQ,GAAG,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;YACpC,IAAI,QAAQ,EAAE;gBACZ,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;aAC5B;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAA;aACvB;QACH,CAAC,CAAA;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAA;IACjC,CAAC;IACH,yBAAC;AAAD,CAAC,AAvBD,IAuBC"},"dts":{"name":"/Users/championswimmer/Development/Personal/Vue/vuex-persist/SimplePromiseQueue.d.ts","text":"export default class SimplePromiseQueue {\r\n    private readonly _queue;\r\n    private _flushing;\r\n    enqueue(promise: Promise<void>): Promise<void>;\r\n    private flushQueue();\r\n}\r\n"}}
