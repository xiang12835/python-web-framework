{"code":"/**\r\n * Created by championswimmer on 18/07/17.\r\n */\r\nimport merge from 'lodash.merge';\r\nimport MockStorage from './MockStorage';\r\nimport SimplePromiseQueue from './SimplePromiseQueue';\r\n/**\r\n * A class that implements the vuex persistence.\r\n */\r\nvar VuexPersistence = /** @class */ (function () {\r\n    /**\r\n     * Create a {@link VuexPersistence} object.\r\n     * Use the <code>plugin</code> function of this class as a\r\n     * Vuex plugin.\r\n     * @param {PersistOptions} options\r\n     */\r\n    function VuexPersistence(options) {\r\n        var _this = this;\r\n        // tslint:disable-next-line:variable-name\r\n        this._mutex = new SimplePromiseQueue();\r\n        /**\r\n         * Creates a subscriber on the store. automatically is used\r\n         * when this is used a vuex plugin. Not for manual usage.\r\n         * @param store\r\n         */\r\n        this.subscriber = function (store) {\r\n            return function (handler) { return store.subscribe(handler); };\r\n        };\r\n        this.key = ((options.key != null) ? options.key : 'vuex');\r\n        this.subscribed = false;\r\n        this.storage =\r\n            ((options.storage != null)\r\n                ? options.storage\r\n                : (typeof window === 'undefined')\r\n                    ? (new MockStorage())\r\n                    : window.localStorage);\r\n        /**\r\n         * How this works is -\r\n         *  1. If there is options.reducer function, we use that, if not;\r\n         *  2. We check options.modules;\r\n         *    1. If there is no options.modules array, we use entire state in reducer\r\n         *    2. Otherwise, we create a reducer that merges all those state modules that are\r\n         *        defined in the options.modules[] array\r\n         * @type {((state: S) => {}) | ((state: S) => S) | ((state: any) => {})}\r\n         */\r\n        this.reducer = ((options.reducer != null)\r\n            ? options.reducer\r\n            : ((options.modules == null)\r\n                ? (function (state) { return state; })\r\n                : (function (state) {\r\n                    return options.modules.reduce(function (a, i) {\r\n                        return merge(a, (_a = {}, _a[i] = state[i], _a));\r\n                        var _a;\r\n                    }, {});\r\n                })));\r\n        this.filter = ((options.filter != null)\r\n            ? options.filter\r\n            : (function (mutation) { return true; }));\r\n        this.strictMode = options.strictMode || false;\r\n        this.RESTORE_MUTATION = function RESTORE_MUTATION(state, savedState) {\r\n            var mergedState = merge({}, state, savedState);\r\n            for (var _i = 0, _a = Object.keys(mergedState); _i < _a.length; _i++) {\r\n                var propertyName = _a[_i];\r\n                this._vm.$set(state, propertyName, mergedState[propertyName]);\r\n            }\r\n        };\r\n        this.asyncStorage = options.asyncStorage || false;\r\n        var storageConfig = this.storage && (this.storage)._config;\r\n        this.asyncStorage = this.asyncStorage || (storageConfig && storageConfig.name) === 'localforage';\r\n        if (this.asyncStorage) {\r\n            /**\r\n             * Async {@link #VuexPersistence.restoreState} implementation\r\n             * @type {((key: string, storage?: Storage) =>\r\n             *      (Promise<S> | S)) | ((key: string, storage: AsyncStorage) => Promise<any>)}\r\n             */\r\n            this.restoreState = ((options.restoreState != null)\r\n                ? options.restoreState\r\n                : (function (key, storage) {\r\n                    return (storage).getItem(key)\r\n                        .then(function (value) {\r\n                        return typeof value === 'string' // If string, parse, or else, just return\r\n                            ? JSON.parse(value || '{}')\r\n                            : (value || {});\r\n                    });\r\n                }));\r\n            /**\r\n             * Async {@link #VuexPersistence.saveState} implementation\r\n             * @type {((key: string, state: {}, storage?: Storage) =>\r\n             *    (Promise<void> | void)) | ((key: string, state: {}, storage?: Storage) => Promise<void>)}\r\n             */\r\n            this.saveState = ((options.saveState != null)\r\n                ? options.saveState\r\n                : (function (key, state, storage) {\r\n                    return (storage).setItem(key, // Second argument is state _object_ if localforage, stringified otherwise\r\n                    (((storage && storage._config && storage._config.name) === 'localforage')\r\n                        ? merge({}, state)\r\n                        : JSON.stringify(state)));\r\n                }));\r\n            /**\r\n             * Async version of plugin\r\n             * @param {Store<S>} store\r\n             */\r\n            this.plugin = function (store) {\r\n                (_this.restoreState(_this.key, _this.storage)).then(function (savedState) {\r\n                    /**\r\n                     * If in strict mode, do only via mutation\r\n                     */\r\n                    if (_this.strictMode) {\r\n                        store.commit('RESTORE_MUTATION', savedState);\r\n                    }\r\n                    else {\r\n                        store.replaceState(merge(store.state, savedState));\r\n                    }\r\n                    _this.subscriber(store)(function (mutation, state) {\r\n                        if (_this.filter(mutation)) {\r\n                            _this._mutex.enqueue(_this.saveState(_this.key, _this.reducer(state), _this.storage));\r\n                        }\r\n                    });\r\n                    _this.subscribed = true;\r\n                });\r\n            };\r\n        }\r\n        else {\r\n            /**\r\n             * Sync {@link #VuexPersistence.restoreState} implementation\r\n             * @type {((key: string, storage?: Storage) =>\r\n             *    (Promise<S> | S)) | ((key: string, storage: Storage) => (any | string | {}))}\r\n             */\r\n            this.restoreState = ((options.restoreState != null)\r\n                ? options.restoreState\r\n                : (function (key, storage) {\r\n                    var value = (storage).getItem(key);\r\n                    if (typeof value === 'string') {\r\n                        return JSON.parse(value || '{}');\r\n                    }\r\n                    else {\r\n                        return (value || {});\r\n                    }\r\n                }));\r\n            /**\r\n             * Sync {@link #VuexPersistence.saveState} implementation\r\n             * @type {((key: string, state: {}, storage?: Storage) =>\r\n             *     (Promise<void> | void)) | ((key: string, state: {}, storage?: Storage) => Promise<void>)}\r\n             */\r\n            this.saveState = ((options.saveState != null)\r\n                ? options.saveState\r\n                : (function (key, state, storage) {\r\n                    return (storage).setItem(key, // Second argument is state _object_ if localforage, stringified otherwise\r\n                    JSON.stringify(state));\r\n                }));\r\n            /**\r\n             * Sync version of plugin\r\n             * @param {Store<S>} store\r\n             */\r\n            this.plugin = function (store) {\r\n                var savedState = _this.restoreState(_this.key, _this.storage);\r\n                if (_this.strictMode) {\r\n                    store.commit('RESTORE_MUTATION', savedState);\r\n                }\r\n                else {\r\n                    store.replaceState(merge(store.state, savedState));\r\n                }\r\n                _this.subscriber(store)(function (mutation, state) {\r\n                    if (_this.filter(mutation)) {\r\n                        _this.saveState(_this.key, _this.reducer(state), _this.storage);\r\n                    }\r\n                });\r\n                _this.subscribed = true;\r\n            };\r\n        }\r\n    }\r\n    return VuexPersistence;\r\n}());\r\nexport { VuexPersistence };\r\nexport { MockStorage };\r\nexport default VuexPersistence;\r\n//# sourceMappingURL=index.js.map","map":{"version":3,"file":"index.js","sourceRoot":"","sources":["src/index.ts"],"names":[],"mappings":"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"},"dts":{"name":"/Users/championswimmer/Development/Personal/Vue/vuex-persist/index.d.ts","text":"import { Mutation, Payload, Plugin } from 'vuex';\r\nimport { AsyncStorage } from './AsyncStorage';\r\nimport MockStorage from './MockStorage';\r\nimport { PersistOptions } from './PersistOptions';\r\n/**\r\n * A class that implements the vuex persistence.\r\n */\r\nexport declare class VuexPersistence<S, P extends Payload> implements PersistOptions<S> {\r\n    asyncStorage: boolean;\r\n    storage: Storage | AsyncStorage;\r\n    restoreState: (key: string, storage?: AsyncStorage | Storage) => Promise<S> | S;\r\n    saveState: (key: string, state: {}, storage?: AsyncStorage | Storage) => Promise<void> | void;\r\n    reducer: (state: S) => {};\r\n    key: string;\r\n    filter: (mutation: Payload) => boolean;\r\n    modules: string[];\r\n    strictMode: boolean;\r\n    /**\r\n     * The plugin function that can be used inside a vuex store.\r\n     */\r\n    plugin: Plugin<S>;\r\n    /**\r\n     * A mutation that can be used to restore state\r\n     * Helpful if we are running in strict mode\r\n     */\r\n    RESTORE_MUTATION: Mutation<S>;\r\n    subscribed: boolean;\r\n    private _mutex;\r\n    /**\r\n     * Create a {@link VuexPersistence} object.\r\n     * Use the <code>plugin</code> function of this class as a\r\n     * Vuex plugin.\r\n     * @param {PersistOptions} options\r\n     */\r\n    constructor(options: PersistOptions<S>);\r\n    /**\r\n     * Creates a subscriber on the store. automatically is used\r\n     * when this is used a vuex plugin. Not for manual usage.\r\n     * @param store\r\n     */\r\n    private subscriber;\r\n}\r\nexport { MockStorage, AsyncStorage, PersistOptions };\r\nexport default VuexPersistence;\r\n"}}
